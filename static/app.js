angular.module("app",["ui.bootstrap","templates","ui.router","home","sensors","pageNotFound"]),angular.module("app").constant("CONFIG",{STRING_COLUMNS:["component","timezone"],LIMIT_OPTIONS:[100,500,1e3,5e3,1e4,5e4],SINCE_OPTIONS:[{number:10,units:"minutes"},{number:1,units:"hour"},{number:3,units:"hours"},{number:6,units:"hours"},{number:12,units:"hours"},{number:1,units:"day"},{number:3,units:"days"},{number:1,units:"week"}],CHART_FIELDS:{anomalyScore:{color:"rgb(201,12,6)"},anomalyLikelihood:{color:"rgb(204,122,5)"},value:{color:"rgb(4,138,191)"}},ANOMALY_THRESHOLD:.9,THRESHOLD_HIGHLIGHT_FIELDS:["anomalyScore","anomalyLikelihood"]}),angular.module("app").config(["$stateProvider","$urlRouterProvider",function(e,n){e.state("home",{url:"/",templateUrl:"routes/home/home.tpl.html",controller:"HomeController"}).state("pageNotFound",{url:"/pageNotFound",templateUrl:"routes/pageNotFound/pageNotFound.tpl.html",controller:"PageNotFoundController"}),n.when("","/"),n.otherwise("/pageNotFound")}]),angular.module("templates",[]),angular.module("app").controller("appCtrl",["$scope",function(e){}]),angular.module("pageNotFound",[]).controller("PageNotFoundController",["$scope",function(e){}]),angular.module("app").directive("breadcrumb",["$state",function(e){return{restrict:"E",replace:!0,templateUrl:"directives/breadcrumb.tpl.html",link:function(n,t,s){n.breadcrumbs=[],n.$on("$stateChangeSuccess",function(t,s,o){n.breadcrumbs.length=0,"sensors.list"===e.current.name?n.breadcrumbs.push({name:"Sensors",state:"sensors.list",active:!0}):"sensors.type.sensor"===e.current.name&&(n.breadcrumbs.push({name:"Sensors",state:"sensors.list",active:!1}),n.breadcrumbs.push({name:o.type+"/"+o.sensor,state:"sensors.type.sensor({ type: '"+o.type+"', sensor: '"+o.sensor+"' })",active:!0}))})}}}]),angular.module("app").directive("stbChart",["$http","stbUtils","CONFIG",function(e,n,t){return{restrict:"EA",scope:{sensorName:"@"},replace:!0,templateUrl:"directives/stbChart.tpl.html",link:function(n,s,o){var i,l={};n.view||(n.view={}),n.view.chart=null,n.view.limitOptions=t.LIMIT_OPTIONS,n.view.limit=t.LIMIT_OPTIONS[0],n.view.since=null,n.view.sinceOptions=t.SINCE_OPTIONS,n.view.fieldStates=[],n.view.loading=!1,n.view.data=null,l.globalLimit=n.$on("setLimit",function(e,t){t!==n.view.limit&&(n.view.limit=t,n.getData())}),l.globalSince=n.$on("setSince",function(e,t){t!==n.view.since&&(n.view.since=t,n.getData())});var a=function(e){var n=moment(),t=moment.duration(e.number,e.units);return n.subtract(t).unix()},r=function(e){var n=t.STRING_COLUMNS,s=[],o=e.series[0];angular.forEach(o.columns,function(e,t){-1!==n.indexOf(e)&&s.push(t)}),s=s.reverse(),angular.forEach(s,function(e){o.columns.splice(e,1)}),angular.forEach(o.values,function(e){angular.forEach(s,function(n){e.splice(n,1)})})},u=function(e){var n=new Date(e);if("Invalid Date"!==n.toString())return n;var t=String(e).split(" "),s=[],o=t[0].split("/"),i=t[0].split("-");if(1===o.length&&1===i.length||o.length>1&&i.length>1)return h("Could not parse the timestamp","warning",!0),null;if(i.length>2)s.push(i[0]),s.push(i[1]),s.push(i[2]);else{if(!(o.length>2))return h("There was something wrong with the date in the timestamp field.","warning",!0),null;s.push(o[2]),s.push(o[0]),s.push(o[1])}if(t[1]){var l=t[1].split(":");s=s.concat(l)}for(var a=0;a<s.length;a++)s[a]=parseInt(s[a]);return n=new Function.prototype.bind.apply(Date,[null].concat(s)),"Invalid Date"===n.toString()?(h("The timestamp appears to be invalid.","warning",!0),null):n},c=function(e){var n=0;for(i=0;i<e.series[0].columns.length;i++)if("time"===e.series[0].columns[i]||"timestamp"===e.series[0].columns[i]){n=i;break}for(i=0;i<e.series[0].values.length;i++)e.series[0].values[i][n]=u(e.series[0].values[i][n]);return e},d=function(e){n.view.fieldStates.length=0;var s=0;for(i=0;i<e.series[0].columns.length;i++)if("time"!==e.series[0].columns[i]){var o=t.CHART_FIELDS[e.series[0].columns[i]].color||"rgb(0,0,0)";n.view.fieldStates.push({name:e.series[0].columns[i],visible:!0,id:s,color:o}),s++}},m=function(e,s,o){function i(n,t,o){var i=t-n;e.fillStyle=o,e.fillRect(n,s.y,i,s.h)}for(var l=0;l<n.view.fieldStates.length;l++){var a,r,u,c,d,m,p,v;if(-1!==t.THRESHOLD_HIGHLIGHT_FIELDS.indexOf(n.view.fieldStates[l].name)&&n.view.fieldStates[l].visible){if(m=n.view.fieldStates[l],p=n.view.data.series[0].columns.indexOf(m.name),0>p)return;d=m.color.replace("rgb","rgba").replace(")",",0.5)"),a=null,r=null,c=null,u=null;for(var h=n.view.data.series[0].values,g=0;g<h.length;g++)if(h[g][p]>=t.ANOMALY_THRESHOLD&&null===a&&(a=o.toDomXCoord(h[g][0].getTime()),u=g),h[g][p]>=t.ANOMALY_THRESHOLD&&(c=g),null!==a&&(h[g][p]<t.ANOMALY_THRESHOLD||g>=h.length-1)){if(g===c)r=o.toDomXCoord(h[c][0].getTime());else{var f=o.toDomXCoord(h[g][0].getTime())-o.toDomXCoord(h[c][0].getTime()),b=h[c][p]-h[g][p],w=Math.atan(f/b),S=h[c][p]-t.ANOMALY_THRESHOLD,y=S*Math.tan(w);r=o.toDomXCoord(h[c][0].getTime())+y}if(v=u-1,v>=0){var T=a-o.toDomXCoord(h[v][0].getTime()),O=h[u][p]-h[v][p],L=Math.atan(T/O),I=h[u][p]-t.ANOMALY_THRESHOLD,N=I*Math.tan(L);a-=N}i(a,r,d),a=null,r=null,c=null,u=null}}}},p=function(e){for(i=0;i<e.length;i++)n.view.fieldStates[i].color=e[i]};n.toggleVisibility=function(e){n.view.chart.setVisibility(e.id,e.visible)};var v=function(e){r(e),c(e),n.view.data=e};n.getData=function(){n.view.loading=!0;var t="/_data/sensor/"+n.sensorName,s={params:{}};null!==n.view.limit&&(s.params.limit=n.view.limit),null!==n.view.since&&(s.params.since=a(n.view.since)),e.get(t,s).then(function(e){angular.isDefined(e.data.series)?(v(e.data),null!==n.view.chart?n.view.chart.updateOptions({file:e.data.series[0].values}):n.view.chart=g(e.data)):n.view.chart=null},h)};var h=function(e){n.view.loading=!1,console.log(e)},g=function(e){d(e);var o=s.find(".chart-container");return new Dygraph(o[0],e.series[0].values,{labels:e.series[0].columns,sigFigs:5,series:{value:{strokeWidth:2,strokePattern:[4,1],color:t.CHART_FIELDS.value.color},anomalyScore:{axis:"y2",color:t.CHART_FIELDS.anomalyScore.color},anomalyLikelihood:{axis:"y2",color:t.CHART_FIELDS.anomalyLikelihood.color}},axes:{y2:{valueRange:[0,1.1]}},legend:"follow",labelsSeparateLines:!0,drawCallback:function(e,t){t&&p(e.getColors()),n.view.loading=!1},underlayCallback:m})};n.getData(),n.$on("$destroy",function(){angular.forEach(l,function(e){e()})})}}}]),angular.module("app").factory("stbUtils",function(){var e={getUrlQueryString:function(){var e=window.location.href.indexOf("?"),n="";return e>1&&(n=window.location.href.slice(window.location.href.indexOf("?")+1)),n},getUrlVars:function(){for(var e,n=[],t=getUrlQueryString().split("&"),s=0;s<t.length;s++)e=t[s].split("="),n.push(e[0]),n[e[0]]=e[1];return n}};return e}),angular.module("home",["ui.router"]),angular.module("home").controller("HomeController",["$scope","$http",function(e,n){e.view={models:[],loading:!0},n.get("/_models").then(function(n){e.view.models=n.data,e.view.loading=!1},t);var t=function(n){console.log(n),e.view.loading=!1}}]),angular.module("pageNotFound",[]).controller("PageNotFoundController",["$scope",function(e){}]),angular.module("sensors",["ui.router"]),angular.module("sensors").config(["$stateProvider","$urlRouterProvider",function(e,n){e.state("sensors",{url:"/sensors","abstract":!0,templateUrl:"routes/sensors/sensors.tpl.html"}).state("sensors.list",{url:"",templateUrl:"routes/sensors/sensors.list.tpl.html",controller:"SensorsListController"}).state("sensors.type",{url:"/:type",templateUrl:"routes/sensors/sensor.type.tpl.html",controller:"SensorTypeController"}).state("sensors.type.sensor",{url:"/:sensor",templateUrl:"routes/sensors/sensor.tpl.html",controller:"SensorController"})}]),angular.module("sensors").controller("SensorsListController",["$scope","$http","CONFIG",function(e,n,t){e.sensors=[],e.sensorPath=function(e){var n=e.split("/");return{type:n[0],sensor:n[1]}},n.get("/_data/sensors").then(function(n){e.sensors=n.data}),e.setLimit=function(){e.$broadcast("setLimit",e.view.limit)},e.setSince=function(){e.$broadcast("setSince",e.view.since)},e.view={sinceOptions:t.SINCE_OPTIONS,limitOptions:t.LIMIT_OPTIONS,limit:t.LIMIT_OPTIONS[0],since:null}}]),angular.module("sensors").controller("SensorTypeController",["$scope","$http","$stateParams",function(e,n,t){}]),angular.module("sensors").controller("SensorController",["$scope","$http","$stateParams",function(e,n,t){e.view={sensor:t.type+"/"+t.sensor}}]),angular.module("templates").run(["$templateCache",function(e){e.put("directives/breadcrumb.tpl.html",'<ol class="breadcrumb">\n  <li><a ui-sref="home">Home</a></li>\n  <li ng-repeat="breadcrumb in breadcrumbs" ng-class="{ \'active\' : breadcrumb.active }"><a ng-if="!breadcrumb.active" ui-sref="{{breadcrumb.state}}">{{breadcrumb.name}}</a><span ng-if="breadcrumb.active">{{breadcrumb.name}}</li>\n</ol>\n'),e.put("directives/stbChart.tpl.html",'<div class="chart">\n  <div class="chart-controls form-horizontal">\n    <div class="form-group">\n      <div class="col-md-3">\n        <label class="col-md-6 control-label">Row Limit:</label>\n        <div class="col-md-6">\n          <select class="form-control" ng-options="limit for limit in view.limitOptions" ng-model="view.limit" ng-change="getData()">\n            <option value="">None</option>\n          </select>\n        </div>\n      </div>\n      <div class="col-md-3">\n        <label class="col-md-6 control-label">Time limit:</label>\n        <div class="col-md-6">\n          <select class="form-control" ng-options="(value.number + \' \' + value.units) for (name, value) in view.sinceOptions" ng-model="view.since" ng-change="getData()">\n            <option value="">None</option>\n          </select>\n        </div>\n      </div>\n      <div class="col-md-6">\n        <label class="col-md-3 control-label">Visibility:</label>\n        <div class="col-md-9">\n          <ul class="set-visiblity">\n            <li ng-repeat="field in view.fieldStates track by field.id" ng-if="field.name === \'anomalyScore\' || field.name === \'anomalyLikelihood\'"><input type="checkbox" ng-model="field.visible" ng-click="toggleVisibility(field)"> <label style="color: {{field.color}}">{{field.name}}</label></li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class="loading" ng-show="view.loading"><span class="loading-spin"></span></div>\n  <div class="chart-container"></div>\n</div>\n'),e.put("routes/home/home.tpl.html",'<div class="jumbotron">\n    <h1>SmartThings HTM Bridge</h1>\n\n    <p>This is a <a href="https://github.com/rhyolight/smartthings.htm.bridge">work in progress</a>.</p>\n\n    <p>SmartApps can <code>POST</code> data to this URL to relay it into HTM.</p>\n\n    <p><a class="btn btn-primary btn-lg" ui-sref="sensors.list" role="button">See Charts</a></p>\n\n</div>\n\n<p>This web server relays SmartThings data from a SmartApp into an <a href="https://github.com/nupic-community/htm-over-http">HTM HTTP server</a>.</p>\n\n<div class="model-list">\n  <h3>The following models are active in HTM:</h3>\n  <div class="loading" ng-show="view.loading"><span class="loading-spin"></span></div>\n  <ul>\n      <li ng-repeat="model in view.models">{{model}}</li>\n  </ul>\n</div>\n'),e.put("routes/pageNotFound/pageNotFound.tpl.html",'<div class="page-not-found container-fluid">\n  <div class="jumbotron">\n  <h3>We are sorry, but could not find the page you are looking for.</h3>\n  </div>\n</div>\n'),e.put("routes/sensors/sensor.tpl.html",'<div class="panel panel-info">\n  <div class="panel-heading">\n    <h3 class="panel-title">\n      {{view.sensor}}\n    </h3>\n  </div>\n  <stb-chart sensor-name="{{view.sensor}}"></stb-chart>\n</div>\n'),e.put("routes/sensors/sensor.type.tpl.html","<div ui-view></div>\n"),e.put("routes/sensors/sensors.list.tpl.html",'<div class="panel panel-warning sensors-panel">\n    <div class="panel-heading clearfix">\n      <div class="row dropdowns">\n        <div class="col-md-4">\n          <div class="btn-group">\n            <button class="btn btn-default dropdown-toggle" type="button" id="dropdownMenu1" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">\n              Jump to a chart <span class="caret"></span>\n            </button>\n            <ul class="dropdown-menu" aria-labelledby="dropdownMenu1">\n                <li ng-repeat="sensor in sensors"><a ui-sref="sensors.type.sensor(sensorPath(sensor))">{{sensor}}</a></li>\n            </ul>\n          </div>\n        </div>\n        <div class="col-md-8 form-inline limits">\n          <span class="set-limits">Set limits for all charts:</span>\n          <div class="btn-group">\n            <label for="limitOptions">Row limit</label>\n            <select class="form-control" name="limitOptions" ng-options="limit for limit in view.limitOptions" ng-model="view.limit" ng-change="setLimit()">\n              <option value="">None</option>\n            </select>\n          </div>\n          <div class="btn-group">\n            <label for="limitOptions">Time limit</label>\n            <select class="form-control" name="sinceOptions" ng-options="(value.number + \' \' + value.units) for (name, value) in view.sinceOptions" ng-model="view.since" ng-change="setSince()">\n              <option value="">None</option>\n            </select>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class="panel-body">\n        <h2 class="panel-title" id="top">About the Charts</h2>\n        <p>\n            Anomaly values are plotted on the secondary Y axis on the right. Door open/close values are either <code>0</code> or <code>1</code>. I don\'t understand the acceleration data yet. Data is coming from a <a href="https://github.com/rhyolight/smartthings-apps/blob/master/http-poster.groovy">SmartThings app</a>. It is being send via HTTP to <a href="https://github.com/numenta/nupic">NuPIC</a> running behind a <a href="https://github.com/nupic-community/hitc">REST API</a>. Sensor values and HTM results are saved to a time-series database called <a href="https://docs.influxdata.com/influxdb/v0.9/concepts/key_concepts/">InfluxDB</a>.\n        </p>\n       <!-- <p>\n            You can also use the URL query parameters to declare how many data points you want to show in the graph(s) below. Just add <code>?limit=X</code> to the URL, or use the dropdown in the panel header above.\n        </p> -->\n    </div>\n</div>\n<div class="panel panel-info" ng-repeat="sensor in sensors">\n  <div class="panel-heading">\n    <h3 class="panel-title">\n        <a ui-sref="sensors.type.sensor(sensorPath(sensor))">{{sensor}}</a>\n    </h3>\n  </div>\n  <stb-chart sensor-name="{{sensor}}"></stb-chart>\n</div>\n'),e.put("routes/sensors/sensors.tpl.html",'<div class="page-header">\n  <h1>Live SmartThings Sensor Values <small>and HTM anomaly scores</small></h1>\n</div>\n\n<breadcrumb></breadcrumb>\n<div ui-view></div>\n')}]);